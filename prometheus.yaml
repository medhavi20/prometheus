# my global config
global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
       - alert-manager-0-2:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
   - /opt/bitnami/prometheus/conf/rules.yaml
   - /opt/bitnami/prometheus/conf/alerts.yaml

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'node-exporter'
    static_configs:
    - targets:
      - '10.0.13.38:9100'
      - '10.0.133.41:9100'
    metric_relabel_configs:
      - source_labels: ['nodename']
        regex: '(engine.master)'
        target_label: nodename
        replacement: 'appz-${1}'
      - source_labels: ['nodename']
        regex: 'k8s.(.*)'
        target_label: nodename
        replacement: 'appz-${1}'
      - source_labels: ['nodename']
        regex: 'ip-192-168-103-189.us-east-2.compute.internal'
        target_label: nodename
        replacement: 'appz-qa-worker-1'
      - source_labels: ['nodename']
        regex: 'ip-192-168-163-143.us-east-2.compute.internal'
        target_label: nodename
        replacement: 'appz-qa-worker-2'
      - source_labels: ['nodename']
        regex: 'ip-192-168-130-193.us-east-2.compute.internal'
        target_label: nodename
        replacement: 'appz-prod-worker-1'

  - job_name: 'kube-state-metrics'
    static_configs:
    - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
    
  - job_name: 'redis'
    kubernetes_sd_configs:
    - role: endpoints
    
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod

    - source_labels: [pod]
      regex: '((.*)redis(.*))'
      action: keep   

    - source_labels: [__address__]
      target_label: __address__
      regex: '([^:]+)(:[6379]+)?'
      replacement: '${1}'
      action: drop
      
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: 'AppZ${1}'

  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: 'kubernetes.default.svc:443'
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: '/api/v1/nodes/${1}/proxy/metrics/cadvisor'

  - job_name: 'mongodb_exporter'
    kubernetes_sd_configs:
    - role: endpoints
    
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: pod

    - source_labels: [pod]
      regex: '((.*)mongodb(.*))'
      action: keep   

    - source_labels: [__address__]
      target_label: __address__
      regex: '([^:]+)(:[27017]+)?'
      replacement: '${1}'
      action: drop
      
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: 'AppZ${1}'
      

      
